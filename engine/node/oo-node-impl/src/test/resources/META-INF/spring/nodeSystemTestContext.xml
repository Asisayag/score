<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
                            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                            http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
                            http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd"
       >

    <bean class="com.hp.oo.engine.node.services.WorkerNodeServiceImpl"/>

    <jdbc:embedded-database id="dataSource" type="H2"/>


    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" p:dataSource-ref="dataSource"/>


     <!-- enable spring @Transactional -->
    <tx:annotation-driven/>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
          p:entityManagerFactory-ref="emf"
          p:dataSource-ref="dataSource"/>

    <bean class="org.springframework.transaction.support.TransactionTemplate"
          p:transactionManager-ref="transactionManager"/>


    <!-- session factory - JPA -->
    <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="liquibase,hiloFactoryBean"
          p:jpaProperties-ref="hibernateProperties"
          p:dataSource-ref="dataSource"
          p:persistenceProviderClass="org.hibernate.ejb.HibernatePersistenceProvider"
          p:packagesToScan="com.hp.oo.engine.node">
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
                  p:showSql="false"
                  p:generateDdl="true"/>
        </property>
    </bean>

    <util:properties id="hibernateProperties">
        <prop key="hibernate.format_sql">true</prop>
        <prop key="hibernate.cache.use_query_cache">false</prop>
        <prop key="hibernate.generate_statistics">true</prop>
        <prop key="hibernate.cache.use_second_level_cache">false</prop>

        <prop key="hibernate.jdbc.fetch_size">100</prop>
        <prop key="hibernate.jdbc.batch_size">30</prop>
        <prop key="hibernate.order_updates">true</prop>
        <prop key="hibernate.order_inserts">true</prop>
        <prop key="hibernate.default_batch_fetch_size">20</prop>
        <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
        <prop key="hibernate.dialect_resolver">org.hibernate.service.jdbc.dialect.spi.DialectResolver</prop>
    </util:properties>

    <bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase" p:dataSource-ref="dataSource"
          p:changeLog="classpath:META-INF/database/test.changes.xml">
    </bean>

    <bean id="hiloFactoryBean" class="com.hp.score.engine.data.HiloFactoryBean" depends-on="liquibase"/>

    <jpa:repositories base-package="com.hp.oo"/>

	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder">
		<constructor-arg value="sha-256"/>
	</bean>
</beans>